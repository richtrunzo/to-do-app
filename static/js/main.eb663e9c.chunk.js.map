{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","completeTodo","deleteTodo","style","textDecoration","isCompleted","className","text","onClick","Todoform","addtodo","useState","value","setvalue","onSubmit","e","preventDefault","type","placeholder","onChange","target","App","todos","setTodos","useEffect","JSON","parse","localStorage","getItem","newTodos","todosJSON","stringify","setItem","splice","map","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGA,SAASA,EAAT,GAAwD,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,WACxC,OAAO,sBAAKC,MAAO,CAACC,eAAgBL,EAAKM,YAAc,eAAiB,IAAKC,UAAU,8HAAhF,UAEE,qBAAKA,UAAU,OAAf,SAAuBP,EAAKQ,OAC7B,sBAAKD,UAAU,YAAf,UACE,wBAAQA,UAAU,iCAAiCE,QAAS,kBAAMP,EAAaD,IAA/E,sBACA,wBAAQM,UAAU,qCAAqCE,QAAS,kBAAMN,EAAWF,IAAjF,0BAMZ,SAASS,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAAU,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,KAW3B,OAAQ,sBAAMP,UAAU,qCAAqCQ,SARxC,SAAAC,GACrBA,EAAEC,iBACEJ,IACJF,EAAQE,GACRC,EAAS,MAID,SACA,uBAAOI,KAAK,OAAOL,MAAOA,EAAOM,YAAY,gBAAgBZ,UAAU,kBAAkBa,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,YAoDrHS,MA/Cf,WAAgB,IAAD,EACaV,mBAAS,IADtB,mBACNW,EADM,KACCC,EADD,KAGbC,qBAAU,WACR,IAAMF,EAAQG,KAAKC,MAAMC,aAAaC,QAAQ,UAC1CN,GACFC,EAASD,KAEV,IAEL,IAQMrB,EAAe,SAAAD,GACnB,IAAM6B,EAAQ,YAAOP,GACrBO,EAAS7B,GAAOK,aAAc,EAC9BkB,EAASM,GACT,IAAIC,EAAYL,KAAKM,UAAUF,GAC/BF,aAAaK,QAAQ,QAASF,IAI1B5B,EAAa,SAAAF,GACjB,IAAM6B,EAAQ,YAAOP,GACrBO,EAASI,OAAOjC,EAAO,GACvBuB,EAASM,GACT,IAAIC,EAAYL,KAAKM,UAAUF,GAC/BF,aAAaK,QAAQ,QAASF,IAGhC,OAAO,qBAAKxB,UAAU,MAAf,SACC,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,kCAAd,0BACCgB,EAAMY,KAAI,SAACnC,EAAMC,GAChB,OAAO,cAACF,EAAD,CAAkBE,MAAOA,EAAOD,KAAMA,EAAME,aAAcA,EAAcC,WAAYA,GAAzEF,MAEpB,cAACS,EAAD,CAAUC,QA/BJ,SAAAH,GACd,IAAMsB,EAAQ,sBAAOP,GAAP,CAAc,CAACf,UAC7BgB,EAASM,GACTM,QAAQC,IAAId,GACZ,IAAIQ,EAAYL,KAAKM,UAAUF,GAC/BF,aAAaK,QAAQ,QAASF,YCnCjBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb663e9c.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from \"react\";\n\nfunction Todo({todo, index, completeTodo, deleteTodo}) {\n  return <div style={{textDecoration: todo.isCompleted ? 'line-through' : \"\"}} className=\"todo d-flex justify-content-center bg-light bg-gradient mt-3 rounded-pill dshadow animate__animated animate__bounceInLeft\n\">\n           <div className=\"text\">{todo.text}</div>\n          <div className=\"mt-2 mx-4\">\n            <button className=\"btn btn-lg btn-outline-success\" onClick={() => completeTodo(index)}>Complete</button>\n            <button className=\"btn btn-lg btn-outline-danger ms-2\" onClick={() => deleteTodo(index)}>Delete</button>\n          </div>\n        </div>\n\n}\n\nfunction Todoform({addtodo}) {\n  const [value, setvalue] = useState('');\n\n  const handleSubmit = e => {\n  e.preventDefault();\n  if(!value) return;\n  addtodo(value);\n  setvalue(\"\")\n  }\n\n\n  return (<form className=\"d-flex justify-content-center mt-3\" onSubmit={handleSubmit}>\n          <input type=\"text\" value={value} placeholder=\"Add a todo...\" className=\"form-width text\" onChange={e => setvalue(e.target.value)}></input>\n        </form>)\n\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n    if (todos) {\n      setTodos(todos);\n    }\n  }, []);\n\nconst addtodo = text => {\n  const newTodos = [...todos, {text}];\n  setTodos(newTodos)\n  console.log(todos)\n  let todosJSON = JSON.stringify(newTodos);\n  localStorage.setItem('todos', todosJSON)\n}\n\nconst completeTodo = index => {\n  const newTodos = [...todos];\n  newTodos[index].isCompleted = true;\n  setTodos(newTodos);\n  let todosJSON = JSON.stringify(newTodos);\n  localStorage.setItem('todos', todosJSON)\n\n}\n\nconst deleteTodo = index => {\n  const newTodos = [...todos];\n  newTodos.splice(index, 1)\n  setTodos(newTodos);\n  let todosJSON = JSON.stringify(newTodos);\n  localStorage.setItem('todos', todosJSON)\n}\n\nreturn <div className=\"app\">\n        <div className=\"head mx-auto\">\n          <h1 className=\"text-center mt-2 mb-3 head-text\">Coding Todos</h1>\n          {todos.map((todo, index) => {\n            return <Todo key={index} index={index} todo={todo} completeTodo={completeTodo} deleteTodo={deleteTodo} />\n          })}\n          <Todoform addtodo={addtodo}/>\n        </div>\n      </div>\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}